<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>endergeek - Life</title><link href="http://blog.endergeek.com/" rel="alternate"></link><link href="http://blog.endergeek.com/feeds/life.atom.xml" rel="self"></link><id>http://blog.endergeek.com/</id><updated>2015-09-17T11:23:00+02:00</updated><entry><title>At Last</title><link href="http://blog.endergeek.com/pages/2015/09/17/at-last/" rel="alternate"></link><published>2015-09-17T11:23:00+02:00</published><updated>2015-09-17T11:23:00+02:00</updated><author><name>sennhvi</name></author><id>tag:blog.endergeek.com,2015-09-17:/pages/2015/09/17/at-last/</id><summary type="html">&lt;hr&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h2&gt;&lt;img alt="testspeed" src="http://blog.endergeek.com/images/atlast/fuck.jpg"&gt;&lt;/h2&gt;
&lt;h4&gt;0. At last&lt;/h4&gt;
&lt;p&gt;最后的最后 …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h3&gt;&lt;/h3&gt;
&lt;h2&gt;&lt;img alt="testspeed" src="http://blog.endergeek.com/images/atlast/fuck.jpg"&gt;&lt;/h2&gt;
&lt;h4&gt;0. At last&lt;/h4&gt;
&lt;p&gt;最后的最后，时间证明了一切。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;1. 现实&lt;/h4&gt;
&lt;p&gt;人家不会在意你曾知道多少东西，不会在意你的逼格，不会在意你是万金油什么都可以干，不会在意你能多拼命学习，不会在意你曾作出过什么努力，不会在意你曾精通过。&lt;/p&gt;
&lt;p&gt;人家在意你现在能给我带来什么，在意你的经验现在对我有什么好处，在意你现在掌握知识的深度，在意或许你是刷题也能体现你聪明，在意你现在一门语言的代码写得怎样。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;2. 贪多嚼不烂&lt;/h4&gt;
&lt;p&gt;虽然现在新技术推出很快，但很多技术本质并没有变，在有其他技术“良好基础”的前提下，掌握一门新技术并不需要花太长时间，但“良好基础”就如学习武功的内功，才是真正需要多花时间去培养的。&lt;/p&gt;
&lt;p&gt;所以去学习新技术之前，先看看手头的技术是不是掌握好了，如果没掌握好，不妨先学好再说，不然每门技术都浅尝则止，反而是难有成就。&lt;/p&gt;
&lt;p&gt;目标不宜太大，要有阶段性成就正向激励自己&lt;/p&gt;
&lt;p&gt;人的学习热情都是有周期性的，最开始激情满满，一段时间后就会激情逝去，很容易就半途而废放弃了。&lt;/p&gt;
&lt;p&gt;所以在设定阶段性目标时，最好能目标小一点，现实一点，能多一些正向的反馈，这样能让自己走的远一点。&lt;/p&gt;
&lt;p&gt;举例来说，写程序可以优先写单元测试和界面部分，这样很快就有明确的反馈，比如当你看到单元测试全部通过了，能看到界面了。&lt;/p&gt;
&lt;p&gt;学习不会白费&lt;/p&gt;
&lt;p&gt;有时候辛辛苦苦学的新技术，可能不久后就会过时，这时候难免会有是不是白学的想法，但实际上学习从来不会白费的，看过一句话我觉得很有道理：&lt;/p&gt;
&lt;p&gt;你所学习的一切都在帮助构建你头脑中的神经元网络，会帮你建立某种联系使你在后续学习其他东西时更加容易，了解一种知识能够使你跟其他知识进行比较和对比。因此，学习总是有用的，无论学什么。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;3.&lt;/h4&gt;
&lt;p&gt;最后的最后，时间会证明了一切。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;4. The End.&lt;/h4&gt;
&lt;p&gt;&lt;img alt="lifefucker" src="http://blog.endergeek.com/images/atlast/lifefucker.jpg"&gt;&lt;/p&gt;</content><category term="tips"></category></entry><entry><title>How reading affects us</title><link href="http://blog.endergeek.com/pages/2015/08/25/how-reading-affects-us/" rel="alternate"></link><published>2015-08-25T14:10:00+02:00</published><updated>2015-08-25T14:10:00+02:00</updated><author><name>sennhvi</name></author><id>tag:blog.endergeek.com,2015-08-25:/pages/2015/08/25/how-reading-affects-us/</id><summary type="html">&lt;hr&gt;
&lt;h3&gt;How reading affects us …&lt;/h3&gt;</summary><content type="html">&lt;hr&gt;
&lt;h3&gt;How reading affects us&lt;/h3&gt;
&lt;p&gt;&lt;img alt="read" src="http://blog.endergeek.com/images/howread/read.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;0. When requirement occurs&lt;/h4&gt;
&lt;p&gt;由于俩台机器一台&lt;code&gt;win7&lt;/code&gt;一台&lt;code&gt;Linux&lt;/code&gt;而又不堪忍受&lt;code&gt;Linux&lt;/code&gt;乌龟性能(说乌龟不要赖我，截图为证):&lt;/p&gt;
&lt;p&gt;&lt;img alt="linux7z" src="http://blog.endergeek.com/images/howread/linux7z.png"&gt;&lt;/p&gt;
&lt;p&gt;而相较之下，&lt;code&gt;win7&lt;/code&gt;游戏机性能反而好多了:&lt;/p&gt;
&lt;p&gt;&lt;img alt="win7z" src="http://blog.endergeek.com/images/howread/win7z.png"&gt;&lt;/p&gt;
&lt;p&gt;因此，在&lt;code&gt;win7&lt;/code&gt;机器上安装&lt;code&gt;Linux&lt;/code&gt;后，需要把&lt;code&gt;Linux&lt;/code&gt;配置迁移过去，安装软件之类倒简单，参考另一篇文章&lt;a href="http://blog.endergeek.com/pages/2015/08/20/disaster-recovery-record/"&gt;Disaster Recovery Record&lt;/a&gt;可以很快恢复，所以主要任务是把主目录下&lt;code&gt;.&lt;/code&gt;开头的文件都拷贝过去就行了。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;1. First Attempt&lt;/h4&gt;
&lt;p&gt;尝试U盘拷贝，然而直接拷贝检索单个文件十分费时，因此还是压缩之后使用vsftpd FTP服务器直接挂传输更好。&lt;/p&gt;
&lt;p&gt;使用&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ls -a &lt;span class="p"&gt;|&lt;/span&gt;grep &lt;span class="s1"&gt;&amp;#39;\.&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;# 列出以&amp;quot;.&amp;quot;开头的文件&lt;/span&gt;
$ tar -zcvf config.tar.gz &lt;span class="sb"&gt;`&lt;/span&gt;ls -a &lt;span class="p"&gt;|&lt;/span&gt;grep &lt;span class="s1"&gt;&amp;#39;\.&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然而在&lt;code&gt;-v&lt;/code&gt;选项让我查看处理进度的时候发现了这条命令依然是把所有文件(文件名不含&lt;code&gt;.&lt;/code&gt;)压缩，这时仔细查看&lt;code&gt;ls -a |grep '\.'&lt;/code&gt;发现首部包括了目录&lt;code&gt;.&lt;/code&gt;和&lt;code&gt;..&lt;/code&gt;，而&lt;code&gt;.&lt;/code&gt;正是指名了当前文件夹，于是覆盖了&lt;code&gt;grep&lt;/code&gt;语句的本意。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;2. Done&lt;/h4&gt;
&lt;p&gt;那么需要将目录&lt;code&gt;.&lt;/code&gt;和&lt;code&gt;..&lt;/code&gt;过滤掉，想想继续&lt;code&gt;grep&lt;/code&gt;用&lt;code&gt;-v&lt;/code&gt;参数也是不行的，因为会删掉所有，不能用大条件筛选。突然想到&lt;code&gt;''&lt;/code&gt;里写&lt;code&gt;regex&lt;/code&gt;啊，那么好办了，记得《精通正则》一书虽然讲&lt;code&gt;perl&lt;/code&gt;正则，但是一些符号也是通用的，于是命令变为:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ tar -zcvf config.tar.gz &lt;span class="sb"&gt;`&lt;/span&gt;ls -a &lt;span class="p"&gt;|&lt;/span&gt; egrep &lt;span class="s1"&gt;&amp;#39;^\.\w+&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Done.&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;3. Conclusion&lt;/h4&gt;
&lt;p&gt;很多时候感觉书看了也是会忘的，比如使用grep时第一反应并没有想用正则，而是使用&lt;code&gt;-v&lt;/code&gt;从结果中筛掉不满意的，然而产生的副作用让我思考我要的结果是什么结构的，读过《精通正则》和没读过是不一样的，没读过除了上网搜索不知道借助于什么，更不要指望“灵光一闪”了。&lt;/p&gt;
&lt;p&gt;确实，感觉读书总会忘的，而不读，是根本没有东西可忘，读过的，也会在脑海扎根，有时给你灵光一闪。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;4. More ...&lt;/h4&gt;
&lt;p&gt;继续学习吧！～&lt;/p&gt;</content><category term="tips"></category></entry><entry><title>Practise Makes For Success</title><link href="http://blog.endergeek.com/pages/2015/08/23/practise-makes-for-success/" rel="alternate"></link><published>2015-08-23T12:17:00+02:00</published><updated>2015-08-23T12:17:00+02:00</updated><author><name>sennhvi</name></author><id>tag:blog.endergeek.com,2015-08-23:/pages/2015/08/23/practise-makes-for-success/</id><summary type="html">&lt;hr&gt;
&lt;h3&gt;Practise makes for success …&lt;/h3&gt;</summary><content type="html">&lt;hr&gt;
&lt;h3&gt;Practise makes for success&lt;/h3&gt;
&lt;p&gt;&lt;img alt="practise" src="http://blog.endergeek.com/images/practisemakes/practise.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;刚几乎裸考完python研发招聘，又正三观了&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;0. Abstract&lt;/h4&gt;
&lt;p&gt;几乎没准备，虽然一直也关注&lt;code&gt;python&lt;/code&gt;相关&lt;code&gt;tech blog&lt;/code&gt;，大半年没写复杂点或者深入涉及多线程的程序就上战场了，知道&lt;code&gt;GIL&lt;/code&gt;然而并不知道怎么用，想来人生中初次视频笔试如此尴尬，以后笔试必然要早作准备多作准备呀&lt;/p&gt;
&lt;p&gt;室友从起床到打游戏，虽然我并不玩，但是刚开考突然的声音依然会吸引注意力，戴耳机也不好使。&lt;/p&gt;
&lt;p&gt;那么，记录下接下来要重复学习和深入涉及的一些内容吧！&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;1. Written test&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;页表：物理地址，逻辑地址&lt;/li&gt;
&lt;li&gt;&lt;code&gt;KMP&lt;/code&gt;算法：还写过一个程序，只知道是怎么回事&lt;/li&gt;
&lt;li&gt;组合数学：棋盘，路径问题&lt;/li&gt;
&lt;li&gt;&lt;code&gt;C++&lt;/code&gt;：继承，初始化&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Java&lt;/code&gt;：基本类型和引用类型比较&lt;/li&gt;
&lt;li&gt;复杂度：数据结构&lt;/li&gt;
&lt;li&gt;英雄暴击问题：概率论&lt;/li&gt;
&lt;li&gt;离散数学：三人六部门，逻辑问题&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4&gt;2. Extra Test&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;lambda&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;list comprehension,yield&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;readlines&lt;/code&gt;和&lt;code&gt;xreadlines&lt;/code&gt;区别&lt;/li&gt;
&lt;li&gt;&lt;code&gt;def&lt;/code&gt;语句&lt;/li&gt;
&lt;li&gt;&lt;code&gt;GIL&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;多线程和单线程&lt;/li&gt;
&lt;li&gt;&lt;code&gt;decorator&lt;/code&gt;和&lt;code&gt;descriptor&lt;/code&gt;,&lt;code&gt;metaclass&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;动态获取对象属性和设置属性&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h4&gt;3. Conclusion&lt;/h4&gt;
&lt;p&gt;笔试基础部分：确实公式没记住，都只有模糊印象，推导又时间不够。&lt;/p&gt;
&lt;p&gt;附加题：其实题目不难，大概1月份我爆看完&lt;code&gt;corepython&lt;/code&gt;的时候大部分都是回答得上来的，还是使用不频繁，制定下目标吧，&lt;code&gt;python&lt;/code&gt;是肯定要看&lt;code&gt;docs&lt;/code&gt;，&lt;code&gt;hfpython&lt;/code&gt;也赶紧看完找点状态。&lt;/p&gt;
&lt;p&gt;多自习复习基础知识。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;4. More&lt;/h4&gt;
&lt;p&gt;以为自己会点吧怎么也不至于，首次考试基本就算瞎了吧，抓紧时间学习咯！&lt;/p&gt;
&lt;p&gt;&lt;img alt="endeavor" src="http://blog.endergeek.com/images/practisemakes/endeavor.gif"&gt;&lt;/p&gt;</content><category term="tips"></category></entry><entry><title>Before Semester,Say Thank You</title><link href="http://blog.endergeek.com/pages/2015/08/22/before-semestersay-thank-you/" rel="alternate"></link><published>2015-08-22T22:22:00+02:00</published><updated>2015-08-22T22:22:00+02:00</updated><author><name>sennhvi</name></author><id>tag:blog.endergeek.com,2015-08-22:/pages/2015/08/22/before-semestersay-thank-you/</id><summary type="html">&lt;hr&gt;
&lt;h3&gt;Before semester,say Thank …&lt;/h3&gt;</summary><content type="html">&lt;hr&gt;
&lt;h3&gt;Before semester,say Thank you&lt;/h3&gt;
&lt;p&gt;&lt;img alt="Fraterculaarctica" src="http://blog.endergeek.com/images/beforesemester/Fraterculaarctica.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;0. Recent events&lt;/h4&gt;
&lt;p&gt;&lt;img alt="sadevent" src="http://blog.endergeek.com/images/beforesemester/sadevent.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ss&lt;/code&gt;作者(就职于知乎)最近被要求删除托管在&lt;code&gt;github&lt;/code&gt;上的&lt;code&gt;ss&lt;/code&gt;项目，在&lt;code&gt;ios&lt;/code&gt;的&lt;a href="https://github.com/shadowsocks/shadowsocks-iOS/issues/124#issuecomment-133707443"&gt;issue#124&lt;/a&gt;下大家都纷纷前来感谢作者以及希望作者保重。&lt;/p&gt;
&lt;p&gt;想说的话都被你们说完了，自强不息。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;1. Comments on sth - weibo&lt;/h4&gt;
&lt;p&gt;我实在很想吐槽&lt;code&gt;weibo&lt;/code&gt;，这实在是我遇见最村的验证机制，然而耐不住大家都用啊（虽然我也不互动只是看看，好歹跟上时代），所以可想而知对面的程序员是有多奇葩，那么我们开始奇葩之旅：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.输入&lt;code&gt;weibo.com&lt;/code&gt;，回车&lt;/li&gt;
&lt;li&gt;2.提示输入用户名和密码，输入，完毕&lt;/li&gt;
&lt;li&gt;3.弹出验证码框，输入，完毕，回车&lt;/li&gt;
&lt;li&gt;4.提示：输入的验证码不正确（作为资深键盘侠，就不要怀疑我会打错了），重新输入，回车&lt;/li&gt;
&lt;li&gt;5.提示：输入的验证码不正确（搞笑呢？！），重新输入，回车&lt;/li&gt;
&lt;li&gt;6.登录成功，页面跳转&lt;/li&gt;
&lt;li&gt;7.由于换过手机号，&lt;code&gt;weibo&lt;/code&gt;只有一重验证（手机号），因此在一次帐号登录异常后，使用任何链接功能受限，所以&lt;code&gt;weibo&lt;/code&gt;也不能正常使用咯，因为也找不回了，真是奇葩&lt;/li&gt;
&lt;li&gt;8.换个&lt;code&gt;weibo&lt;/code&gt;号？新手机号注册，由于几乎只看无互动，被怀疑是僵尸粉，不允许登录而让我发送某某验证信息到某某号码，果然奇葩，你自己不发6位验证码我让我发一打数字的验证码你，然而我只是看看，那就不发咯&lt;/li&gt;
&lt;li&gt;9.之后直接不上&lt;code&gt;weibo&lt;/code&gt;，直接进入&lt;code&gt;d.weibo.com&lt;/code&gt;看看热门消息就行了，实在想看网友都是怎么评论一件事的，忍受奇s葩b无比的三次验证码后，新标签页中打开链接一样看，页内屏蔽有什么用呢？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;真心希望以后学学&lt;code&gt;google&lt;/code&gt;，如何判断是否是机器人，不要那么麻烦，珍惜大家生命，把编程当作生活艺术&lt;/p&gt;
&lt;p&gt;&lt;img alt="star" src="http://blog.endergeek.com/images/beforesemester/star.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;2. Comments on sth - baidu&lt;/h4&gt;
&lt;p&gt;其次就吐槽下&lt;code&gt;baidu&lt;/code&gt;，钱多就是霸气，妈妈问我为什么跪着敲键盘。先说说200亿砸外卖，能砸出什么呢，用户黏性就跟海浪似的，一大波在沙滩上留下一小波，不断砸钱不断的大浪冲上岸，留下的深入沙土的仍然是少数，平台那么多，人家已经成型，最后大不了家家软件都安装，给点好处就来的，并谈不上什么黏性。且看200亿是如何砸完的，期待结果中。&lt;/p&gt;
&lt;p&gt;不得不吐槽下&lt;code&gt;tieba&lt;/code&gt;了，手机浏览器上的表现是这样变化的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.初代：直接点入即可，帖子内容都可看，还可翻页看&lt;/li&gt;
&lt;li&gt;2.二代：直接点入即可，帖子内容只可看首页，之后请登录&lt;/li&gt;
&lt;li&gt;3.三代：直接点入即可，帖子内容被广告覆盖，需要&lt;code&gt;×&lt;/code&gt;掉广告后，再点内容隐藏的地方，翻页内容和二代一样&lt;/li&gt;
&lt;li&gt;4.四代：直接点入被&lt;code&gt;js&lt;/code&gt;广告覆盖，没有&lt;code&gt;×&lt;/code&gt;可以点，返回并不能取消广告，只能下载贴吧应用（且慢，把&lt;code&gt;js&lt;/code&gt;禁止就可以继续看了）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一味强制推广确实会起到一些作用，很多人觉得也没什么就安装了，而重度用户是早就自觉安装了，但是作为一个并不常用&lt;code&gt;tieba&lt;/code&gt;的人，有时只是参考一些经验却非要落个强迫安装的下场，像我这样稍微了解点计算机婴幼儿知识的人是肯定不会安装的，能点点钮就解决的事情最好不要下载等待安装点入这样操作。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;3. Comments on sth - tencent&lt;/h4&gt;
&lt;p&gt;也许是对新人不放心，让新人去学习，大神那么nb的人因为天天不干活不好意思希望导师给点事做结果导师不给哈哈哈哈，我问大神拿出自己做的些东西了吗，他说没，好吧，也是低调（牛人都喜欢低调，而村炮就喜欢吹nb），大神的nb有目共睹，又说优图用的还是&lt;code&gt;opencv&lt;/code&gt;（这样真的好么），好好人才浪费说明制度不够弹性，让新人去学习应该给像我这种啥也不会的好吧:-p&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;4. Comments on me&lt;/h4&gt;
&lt;p&gt;最近&lt;code&gt;blog&lt;/code&gt;写得有点频繁，虽然也学习了，但是写&lt;code&gt;blog&lt;/code&gt;真是一件劳累的事呢，为了对自己写的负责往往还要继续查资料，怪不得大神经常发个&lt;code&gt;blog&lt;/code&gt;就给了个图，哈哈哈哈，新学期也要开始了，除了要上课，还想系统学点东西写点东西吧，&lt;code&gt;blog&lt;/code&gt;就不像以前用&lt;code&gt;hexo&lt;/code&gt;那样把&lt;code&gt;evernote&lt;/code&gt;里的笔记都写了个遍，浪费时间且重复使用价值不大。&lt;/p&gt;
&lt;p&gt;总之，努力吧！&lt;/p&gt;
&lt;h2&gt;&lt;img alt="owls" src="http://blog.endergeek.com/images/beforesemester/owls.png"&gt;&lt;/h2&gt;</content><category term="tips"></category></entry><entry><title>Restart</title><link href="http://blog.endergeek.com/pages/2015/08/16/restart/" rel="alternate"></link><published>2015-08-16T22:52:00+02:00</published><updated>2015-08-16T22:52:00+02:00</updated><author><name>sennhvi</name></author><id>tag:blog.endergeek.com,2015-08-16:/pages/2015/08/16/restart/</id><summary type="html">&lt;hr&gt;
&lt;h3&gt;说说最近&lt;/h3&gt;
&lt;h4&gt;1. 发生的一些事&lt;/h4&gt;
&lt;p&gt;天津塘沽物流爆炸事件 …&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h3&gt;说说最近&lt;/h3&gt;
&lt;h4&gt;1. 发生的一些事&lt;/h4&gt;
&lt;p&gt;天津塘沽物流爆炸事件，如果人与人之间多一些友善，对生命（不是某个个体）怀有敬畏，且热爱生命，就不会有这些因为利欲熏心而发生的事了。&lt;/p&gt;
&lt;p&gt;真的不能没有底线。&lt;/p&gt;
&lt;p&gt;消防员也是人，让他们去拿生命危险减少那些利益既得者犯下错误所带来的损失，这种感觉很悲凉。&lt;/p&gt;
&lt;p&gt;是啊，你能从这件事情里看到任何你想看到的道理。&lt;/p&gt;
&lt;p&gt;英雄不灭，我辈自强。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;2. 自己做了啥&lt;/h4&gt;
&lt;p&gt;Part I
好多书想看，感觉啥也不会。&lt;/p&gt;
&lt;p&gt;新手机oneplus1到手后就刷了cm12，由于某些大家都知道的原因，谷歌认证服务器失败会导致信号栏旁有感叹号。用了几十天，强迫症犯了，不将就嘛，灭掉它。&lt;/p&gt;
&lt;p&gt;（此处省略一万字，有时间再写:-)，现在还是多多学习～）&lt;/p&gt;
&lt;p&gt;折腾了三天，弄懂了很多事情，rec是什么，twrp是什么，版本存在哪些bug，自己的手机可能还是个烂尾机，最后就尽可能让它工作啦～&lt;/p&gt;
&lt;p&gt;Part II
openWRT，简单说吧，都是泪。大杰懒得指导我，伤心。。。&lt;/p&gt;
&lt;p&gt;目前明白一些东西，但是并没有什么用，说说总结出来的奇葩死逻辑：
需要安装软件--&amp;gt;需要opkg update--&amp;gt;需要联网--&amp;gt;需要写入drcom--&amp;gt;需要python环境--&amp;gt;需要足够空间--&amp;gt;需要usb挂载--&amp;gt;需要update安装软件--...&lt;/p&gt;
&lt;p&gt;就是这么奇葩的逻辑，于是我试图在每一个依赖（硬件弄不了，优先不想拆路由，连刷op都是保守刷，如果成砖了又需要弄ttl线就会拖延时间了）中插入其余条件以使得这个死循环被破解，结果也知道了，都是泪。&lt;/p&gt;
&lt;p&gt;（此处省略一万字，下次有时间弄好了写下来）&lt;/p&gt;
&lt;p&gt;同时也研究研究大杰的drcom&lt;/p&gt;
&lt;p&gt;大杰那啥交流群，果然还是木有好心人指导我，更情愿浪费时间吹吹牛交流感情哈哈哈哈。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;3. 接下来的规划&lt;/h4&gt;
&lt;p&gt;op的折腾确实让我更加重视基础科学知识了，不管是配置无线还是dns，都是书上知识，缺乏实践。&lt;/p&gt;
&lt;p&gt;所以接下来回归书本，重视实践时探索原理。&lt;/p&gt;
&lt;p&gt;上了很多天网查了很多天资料了，脖子酸了手臂累了，出去自习和锻炼吧～&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;4. More&lt;/h4&gt;
&lt;p&gt;跟室友聊天，他问我弄啥，我说op啊，当说起连线这种基础问题时，他说PC连router是console口，我还耐心地解释说LAN口，console口是网络实验课交换机上的，可以配置端口汇聚镜像啥的，他依然坚持自己说的，并且加了一句，那门实验课我89分呢。&lt;/p&gt;
&lt;p&gt;。。。。&lt;/p&gt;
&lt;p&gt;然后我就无语了，我都已经ssh上router了就说明LAN是对的，再说我这小路由并没有console口啊哈哈哈哈（算了都是内心活动）&lt;/p&gt;
&lt;p&gt;今天聊天少年说自己C盘还有20G怕放不了什么东西了（意思啥都会放C盘），我说我C盘70G都塞满过（其实我是安装软件太多）后来重装系统了世界就清净了～少年说咋重装的（内心活动：你不是计算机学院的么。。。）我说自己拿工具烧写个u盘启动盘就行啦，他：哪来的镜像，我说下的啊，他：那不是有很多广告吗，我：我没用过有广告的。。。他：听起来好高端，我（内心活动：这种高端的活也只能拿来骗骗小朋友啊唉。。。我还是好好学习争取有个公司能让我搬个砖啥的）&lt;/p&gt;
&lt;p&gt;虽然我很水，大杰大神都不愿意指导我。。。
但是，加油吧！&lt;/p&gt;</content><category term="tips"></category></entry><entry><title>Some Tips On It Learning</title><link href="http://blog.endergeek.com/pages/2015/06/15/some-tips-on-it-learning/" rel="alternate"></link><published>2015-06-15T23:19:00+02:00</published><updated>2015-06-15T23:19:00+02:00</updated><author><name>sennhvi</name></author><id>tag:blog.endergeek.com,2015-06-15:/pages/2015/06/15/some-tips-on-it-learning/</id><summary type="html">&lt;hr&gt;
&lt;h3&gt;给编程初学者的一些建议&lt;/h3&gt;
&lt;p&gt;&lt;p&gt;
对编程初学者来说，或者对仍在大学接受高等教育，即将成为编程工作者的人来说 …&lt;/p&gt;&lt;/p&gt;</summary><content type="html">&lt;hr&gt;
&lt;h3&gt;给编程初学者的一些建议&lt;/h3&gt;
&lt;p&gt;&lt;p&gt;
对编程初学者来说，或者对仍在大学接受高等教育，即将成为编程工作者的人来说，IT界的技术风潮是不可追赶的。很多人扔掉大学计算机基础课程的课本，而去购买许多看起来很高上大的“编程宝典”，我不想说这些装逼，也许是个人的学习方式不同，我只是觉得如果他们把追赶这些时髦技术的时间多花一点在基础的课程上应该是可以走得更远的。
&lt;/p&gt;&lt;/p&gt;
&lt;h4&gt;计算机技术不等于编程技术&lt;/h4&gt;
&lt;p&gt;
很多人把我们学计算机的当成是修电脑的，很多计算机专业的人对此非常反感。也有人把我们学计算机的当成是写程序的，这难道就对了么？很多在校的学生就会这么认为，认为学计算机就是学编程，计算机专业就是编程专业，也只上和编程有关的课程，其他和编程关系不大的计算机基础课程统统不管，这令我非常诧异。
&lt;/p&gt;

&lt;p&gt;
其实编程只是计算机技术应用过程中一种复杂性最低的劳动，这就是为什么IT业最底层的人是程序员（CODER）。计算机技术包括了多媒体，计算机网络，人工智能，模式识别，管理信息系统等等这些方面。编程工作只是在这些具体技术在理论研究或者工程实践的过程中表达算法的过程。编程的人不一定对计算机技术的了解就一定很高。而一个有趣的现象是，不少大师级的计算机技术研究者是不懂编程的。网上的炒作和现实中良好的工作待遇把编程这种劳动神秘化了。其实每一个程序员心里都明白，自己这些东西，学的时候并不比其它专业难，所以自然也不会高档到哪里去。&lt;/p&gt;

&lt;/p&gt;

&lt;h4&gt;死记硬背，没有灵活应用&lt;/h4&gt;
&lt;p&gt;&lt;p&gt;
我见过一本女生的《计算机网络原理》教材，这个女生像小学生一样在书上划满了横杠杠，笔记做得满满的，打印出来一定比教材还厚。我不明白的是，像计算机网络原理这样的课程有必要做笔记？我们的应试教育的确害了不少学生，在上《原理》这一类课程的时候许多学生像学《马列原理》一样逐字背诵记忆。这乃是我见过的最愚蠢的行为。所谓《原理》，即是需要掌握它为什么这样做，学习why，而不是how（怎样做）。极端认真的学生背下以太网的网线最大长度，数据帧的长度，每个字段的意义，IP报头的格式等等，但是忘了路由的原则，忘了TCP/IP协议设计的宗旨。总之许多人花了大量的时间把书背得滚瓜烂熟却等于什么也没学。
&lt;/p&gt;
&lt;p&gt;
对于编程语言的学习也一样，这里拿C++举例，很多学生都死扣C++语法的细节不放，看了很多C++教程，甚至是在网上也学习很多关于C++语法的课程。但是在写程序的时候突然发现又忘记了这些语法，然后再继续去翻书，这种场景各位应该不少遇到吧。有个师弟就跟我说：“C++ 太难了，学了这里忘了那里，学了继承忘了模板。”我的回答道：“你不去学就容易了”。我并没有教坏他，只是告诉他，死抠C++的语法就和孔已己炫耀茴香豆的茴字有几种写法一样毫无意义。你根本不需要对的C++语法太关心，动手编程就是了，有不记得的地方一查MSDN就立马搞定。我有个结论就是，实际的开发过程中对程序语法的了解是最微不足道的知识。这是为什么我在为同学用Basic（我以前从没有学过它）写一个小程序的时候，只花了半个小时看了看语法，然后再用半个小时完成了程序，而一个小时后我又完全忘记了Basic 的所有关键字。
&lt;/p&gt;&lt;/p&gt;
&lt;h4&gt;基础没学好，乱赶技术时髦&lt;/h4&gt;
&lt;p&gt;&lt;p&gt;
这是我想说的重点，大多数人都希望自己写的应用或者网站能尽快上线，然后赚很多白花花的银子，这也无可厚非，毕竟我们的代码总是需要有商业价值。但是，我觉得这种想法对那些已经真正进入软件行业的人来说是合理的，但是对大部分（注意我说的是大部分，在校创业的也有一部分）在校的准程序员来说，这种想法是要不得的，一个并未进入到行业竞争中来的初学者最大的资本便是他有足够的时间沉下心来学习基础性的东西，学习why 而不是how。时髦的技术往往容易掌握，而且越来越容易掌握，这是商业利益的驱使，为了最大化的降低软件开发的成本。但在IT领域内的现实就是这样，越容易掌握的东西，学习的人越多，而且淘汰得越快。但基础学扎实了，无论今后出来什么新技术，再怎么变幻莫测，它总是架在计算机原理上的，到时候你还不是对它手到擒来？
&lt;/p&gt;
&lt;p&gt;
这里有一个和我有关的例子，大家可以看看：
在大一时我还找不到开机按纽，而我的一位同学已经会写些简单的汇编程序了。我把大二的所有时间花在了汇编，计算机体系结构，数据结构，操作系统原理等等这些课程的学习上，而他则开始学习HTML和VB，并追赶ASP的潮流。大三的时候我开始学习Windows 操作系统原理，学习SDK编程，时间是漫长的，这时我才能够用VC开发出象模象样的应用程序。我曾一度因为同学的程序已经能够运行而自己还在学习如何创建对话框而懊恼不已，但临到毕业才发现自己的选择是何等的正确。和我谈判的公司开出的薪水是他的两倍还多。下面有一个不很恰当的比方：假设学习VB编程需要4个月，学习基础课程和VC的程序设计需要1年。那么如果你先学VB，再来学习后者，时间不会减少，还是1年，而反过来，如果先学习后者，再来学VB，也许你只需要1个星期就能学得非常熟练。
&lt;/p&gt;
&lt;p&gt;
这是一个很典型的例子，在大学里，你的主要任务还是学好基础，我听很多学弟们经常把《计算机组成原理》《网络原理》的课程逃掉去实验室机房做一些WEB开发，个人觉得是非常愚蠢的做法。
&lt;/p&gt;
&lt;p&gt;
说了这么多，这也算是我作为一个过来人的心得，如果你还是在校的学生，或者是刚要进入IT行业的初学者，我真挚地希望，我的这些忠告可以在你未来的职业生涯上派上用场。
&lt;/p&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;参考与来源&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.linuxeden.com/html/news/20140630/153224.html"&gt;linuxeden page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="tips"></category><category term="nb"></category></entry><entry><title>README</title><link href="http://blog.endergeek.com/pages/1970/01/01/readme/" rel="alternate"></link><published>1970-01-01T00:00:00+01:00</published><updated>1970-01-01T00:00:00+01:00</updated><author><name>sennhvi</name></author><id>tag:blog.endergeek.com,1970-01-01:/pages/1970/01/01/readme/</id><summary type="html">&lt;hr&gt;
&lt;h3&gt;博客文章MD文件备份&lt;/h3&gt;
&lt;h4&gt;使用请申请，保留著作权。&lt;/h4&gt;</summary><content type="html">&lt;hr&gt;
&lt;h3&gt;博客文章MD文件备份&lt;/h3&gt;
&lt;h4&gt;使用请申请，保留著作权。&lt;/h4&gt;</content><category term="tips"></category></entry></feed>